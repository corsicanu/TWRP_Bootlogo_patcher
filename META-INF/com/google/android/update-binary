#!/sbin/sh
# Copyright 2017-2024 Â© corsicanu
# Licensed under CC BY-NC-SA 4.0
# https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode

set -e

ZIP=$3
OUTFD="/proc/self/fd/$2"
DEBUG_LOG="/tmp/bootloader.log"

ui_print() {
    echo -n -e "ui_print $1\n" > "$OUTFD"
    echo -n -e "ui_print\n" > "$OUTFD"
}

debug_log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S'): $1" >> "$DEBUG_LOG"
}

check_supported_device() {
    cmdline=$(cat /proc/cmdline | sed 's/ /\n/g')
    debug_log "Debug: cmdline - $cmdline"

    if echo "$cmdline" | grep -E 'exynos|universal'; then
        debug_log "Debug: Device is supported by board"
        return 0
    elif echo "$cmdline" | grep -E 'G99[168][BN]|G[79]8[01568][BF]|G97[0357][BFN]|N98[0156][BF]|N97[0156][BFN]|A[12345]05F|M[23]15F|T51[05]|[EM]625F|F415F|S90[168]B|A13[56][BF]'; then
        debug_log "Debug: Device is supported by regex match in device list)"
        return 0
    else
        ui_print " "
        ui_print "!! Device is not supported, aborting..."
        ui_print " "
        debug_log "Debug: Device is not supported, aborting..."
        exit 1
    fi
}

prepare_tools() {
    cd /tmp
    rm -rf hades bootloader.log
    mkdir -p hades/up_param hades/param
    unzip -o "$ZIP"
    chmod -R 755 /tmp/hades/*
    cd /tmp/hades
    bb=/tmp/hades/busybox
    tr=/tmp/hades/tar
}

process_bootlogo() {
    local target_dir=$1
    local backup_file=$2

    ui_print " - unpacking $target_dir"
    cd "/tmp/hades/$target_dir" && $tr -xf "$($bb find /dev/block/platform -iname $target_dir)"

    debug_log "Debug: Unpacked $target_dir"

    if [ -e "booting_warning.jpg" ] && [[ $($bb stat -c%s "booting_warning.jpg") != 305 ]]; then
        if [ ! -e "/sdcard/bootlogo_backup/$backup_file" ]; then
            ui_print " - backing up stock $target_dir to internal storage"
            mkdir -p "/sdcard/bootlogo_backup"
            dd if="$($bb find /dev/block/platform -iname $target_dir)" of="/sdcard/bootlogo_backup/$backup_file" bs=4096
        fi

        ui_print " - patching warnings"
        cp -r logo.jpg svb_orange.jpg
        cp -r /tmp/hades/1px.jpg booting_warning.jpg
        chown root:root * && chmod 444 *.jpg && touch *

        ui_print " - packing new bootlogo"
        $tr -pcvf "../new_$target_dir.tar" *

        ui_print " - flashing new bootlogo"
        cat "../new_$target_dir.tar" > "$($bb find /dev/block/platform -iname $target_dir)"

        debug_log "Debug: Patched and flashed new $target_dir bootlogo"
    else
        ui_print " - no warning found, skipping $target_dir.."
        debug_log "Debug: No warning found, skipping $target_dir"
    fi
}

main() {
    debug_log "Debug: Script started"

    ui_print " "
    ui_print "Bootlogo Warnings Patcher"
    ui_print "Version: custom"
    ui_print " by corsicanu@xdaforums "
    ui_print " "

    ui_print " - prepairing tools"
    prepare_tools
    sleep 0.5

    ui_print " - checking device compatibility"
    check_supported_device
    sleep 0.5

    ui_print " - processing up_param"
    process_bootlogo "up_param" "up_param.bin"
    sleep 0.5

    ui_print " - processing param"
    process_bootlogo "param" "param.bin"
    sleep 0.5

    ui_print " "
    ui_print "Done, reboot and enjoy!"
    ui_print " "
    sleep 0.5
    sync

    debug_log "Debug: Script completed"
}

main "$@"
